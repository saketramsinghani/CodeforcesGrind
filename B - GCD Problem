#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
#include<string>
using namespace std;



bool SieveOfEratosthenes(int n, bool isPrime[])
{
    isPrime[0] = isPrime[1] = false;
    for (int i=2; i<=n; i++)
        isPrime[i] = true;

    for (int p=2; p*p<=n; p++)
    {
        // If isPrime[p] is not changed, then it is
        // a prime
        if (isPrime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*p; i<=n; i += p)
                isPrime[i] = false;
        }
    }
}


int main(){
    int t;
    cin>>t;
    while(t--){
        long long int n,temp;
        cin>>n;
        if(n%2==0){
            cout<<(n-1)/2<<" "<<(n+1)/2<<" "<<1<<endl;
        }else{
            if((n/2)%2==0){
                cout<<n/2-1<<" "<<n/2+1<<" "<<1<<endl;
            }else{
                cout<<n/2-2<<" "<<n/2+2<<" "<<1<<endl;
            }
        }
        
        
        
    }
}
