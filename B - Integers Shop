#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
#include<string>
#include<map>
#include <utility>
using namespace std;


int main(){
    int t;
    cin>>t;
    while(t--){
        long long int n,l,r,c,temp;
        cin>>n;
        vector<long long int> v[n],v1(n, INT_MAX);
        long long int mini=INT_MAX,maxi=INT_MIN,miniCost, maxiCost;
        
        for(int i=0 ; i<n ; i++){
            cin>>l>>r>>c;
            v[i].push_back(l);
            v[i].push_back(r);
            v[i].push_back(c);
            
        }
     
        map<long long int, long long int> min_l,min_r;
        map<pair<long long int, long long int>, long long int> min_lr;
        
        for(int i=0 ; i<n ; i++){
            if(min_l[v[i][0]]==0)min_l[v[i][0]]=INT_MAX;
            if(min_r[v[i][1]]==0)min_r[v[i][1]]=INT_MAX;
            if(min_lr[{v[i][0], v[i][1]}]==0)min_lr[{v[i][0], v[i][1]}]=INT_MAX;
            
            mini=min(mini, v[i][0]);
            maxi=max(maxi, v[i][1]);
            
            min_l[v[i][0]] = min(min_l[v[i][0]], v[i][2]);
            min_r[v[i][1]] = min(min_r[v[i][1]], v[i][2]);
            min_lr[{v[i][0], v[i][1]}] = min(min_lr[{v[i][0], v[i][1]}], v[i][2]);
            
            if(min_lr.find({mini, maxi}) != min_lr.end())
            v1[i] = min_lr[{mini, maxi}];
            
            v1[i]=min(v1[i], min_l[mini]+min_r[maxi]);
        }
        
        for(int i=0 ; i<n ; i++){
            cout<<v1[i]<<" ";
        }
        cout<<endl;
    }
}
